// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VirturlMeetingAssitant.Backend.Db;

namespace Backend.Migrations
{
    [DbContext(typeof(MeetingContext))]
    [Migration("20201126092214_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("MeetingUser", b =>
                {
                    b.Property<int>("AttendMeetingsMeetingID")
                        .HasColumnType("integer");

                    b.Property<int>("AttendeesUserID")
                        .HasColumnType("integer");

                    b.HasKey("AttendMeetingsMeetingID", "AttendeesUserID");

                    b.HasIndex("AttendeesUserID");

                    b.ToTable("MeetingUser");
                });

            modelBuilder.Entity("VirturlMeetingAssitant.Backend.Db.Department", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("MeetingID")
                        .HasColumnType("integer");

                    b.HasKey("Name");

                    b.HasIndex("MeetingID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("VirturlMeetingAssitant.Backend.Db.Meeting", b =>
                {
                    b.Property<int>("MeetingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LocationName")
                        .HasColumnType("text");

                    b.Property<int>("RepeatType")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("MeetingID");

                    b.HasIndex("LocationName");

                    b.ToTable("Meetings");
                });

            modelBuilder.Entity("VirturlMeetingAssitant.Backend.Db.Room", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.HasKey("Name");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("VirturlMeetingAssitant.Backend.Db.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("DepartmentName")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserID");

                    b.HasIndex("DepartmentName");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MeetingUser", b =>
                {
                    b.HasOne("VirturlMeetingAssitant.Backend.Db.Meeting", null)
                        .WithMany()
                        .HasForeignKey("AttendMeetingsMeetingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VirturlMeetingAssitant.Backend.Db.User", null)
                        .WithMany()
                        .HasForeignKey("AttendeesUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VirturlMeetingAssitant.Backend.Db.Department", b =>
                {
                    b.HasOne("VirturlMeetingAssitant.Backend.Db.Meeting", null)
                        .WithMany("Departments")
                        .HasForeignKey("MeetingID");
                });

            modelBuilder.Entity("VirturlMeetingAssitant.Backend.Db.Meeting", b =>
                {
                    b.HasOne("VirturlMeetingAssitant.Backend.Db.Room", "Location")
                        .WithMany()
                        .HasForeignKey("LocationName");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("VirturlMeetingAssitant.Backend.Db.User", b =>
                {
                    b.HasOne("VirturlMeetingAssitant.Backend.Db.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentName");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("VirturlMeetingAssitant.Backend.Db.Meeting", b =>
                {
                    b.Navigation("Departments");
                });
#pragma warning restore 612, 618
        }
    }
}
